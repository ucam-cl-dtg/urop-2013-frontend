<!-- Resource Filter: Paths behind these filter mappings will not be chained, 
	ie. the response will be returned directly therefore requests will not be
	passed to the Raven filter and not authenticated. Anything that does not need
	raven access should be mapped here. These filter mappings MUST be before the
	raven filter -->

<filter>
	<filter-name>resource</filter-name>
	<filter-class>uk.ac.cam.cl.dtg.teaching.ResourceFilter</filter-class>
</filter>

<filter-mapping>
	<filter-name>resource</filter-name>
	<url-pattern>/css/*</url-pattern>
</filter-mapping>

<filter-mapping>
	<filter-name>resource</filter-name>
	<url-pattern>/js/*</url-pattern>
</filter-mapping>

<filter-mapping>
	<filter-name>resource</filter-name>
	<url-pattern>/img/*</url-pattern>
</filter-mapping>

<filter-mapping>
	<filter-name>resource</filter-name>
	<url-pattern>/about.html</url-pattern>
</filter-mapping>

<!-- Raven Authentication 
	Note that this should be after Htmleasy in the 
	filter chain to ensure that API requests that are expected to return JSON 
	are not redirected to the Raven login page. The APIFilter should be placed 
	before Htmleasy mapped to /api/* to deal with authentication of API requests. -->

<filter>
	<filter-name>raven</filter-name>
	<filter-class>uk.ac.cam.ucs.webauth.RavenFilter</filter-class>
	<init-param>
		<param-name>maxSkew</param-name>
		<param-value>3000</param-value>
	</init-param>
</filter>

<filter-mapping>
	<filter-name>raven</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>

<error-page>
	<error-code>410</error-code>
	<location>/about.html</location>
</error-page> 

<!-- Static resources are dealt with in the normal way (this excludes them 
	from the frontend filter below). -->
<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>/js/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>/img/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>/css/*</url-pattern>
</servlet-mapping>

<servlet-mapping>
	<servlet-name>default</servlet-name>
	<url-pattern>/about.html</url-pattern>
</servlet-mapping>

<!-- All other requests are rendered as the frontend template. The Javascript 
	deals with getting the correct content. -->
<servlet>
	<servlet-name>frontend</servlet-name>
	<servlet-class>uk.ac.cam.cl.dtg.teaching.FrontendServlet</servlet-class>
	<load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>
	<servlet-name>frontend</servlet-name>
	<url-pattern>/*</url-pattern>
</servlet-mapping>
